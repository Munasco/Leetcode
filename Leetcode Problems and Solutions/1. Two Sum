/*
Given an array of integers, return indices of the two numbers such that they add up to a specific target.

You may assume that each input would have exactly one solution, and you may not use the same element twice.

Example:
Given nums = [2, 7, 11, 15], target = 9,

Because nums[0] + nums[1] = 2 + 7 = 9,
return [0, 1]

*/

import java.io.*;
import java.util.*;

public class Solution 
{
    public static void main(String[] args) 
    { 
       Solution s= new Solution();
       Scanner sc = new Scanner(System.in);
       
       System.out.println("Enter the value of n");
       int n = sc.nextInt();
        System.out.println("Enter the target");
        int target=sc.nextInt();
        
       int[] num = new int[n];
       for(int i=0;i<n;i++)
           num[i]=sc.nextInt();
       
       int result[] = new int[2];
       
       result = s.twoSum(num, target);
      
        System.out.println("The final indexx are : ");
        for(int i=0;i<=1;i++)
            System.out.println(result[i]);
        
    }
    
        public int[] twoSum(int[] nums, int target) 
        {
            int[] a = new int[2];
            int count=0;
            
            z:for(int i=0;i<nums.length;i++)
            {
                for(int j=i+1;j<nums.length;j++)
                {
                    if(count == 0 && (target == nums[i]+nums[j]) )
                    {
                        count++;
                        a[0]=i;
                        a[1]=j;
                    }
                    else
                    {
                        if(count!=0)
                             break z;
                    }
                }
            }
            return a;
        }
  
}

